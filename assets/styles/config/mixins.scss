///* ==========================================================================
//   #MIXINS
//   ========================================================================== */

// Mixin to easily apply an overlay to an
// element.
//
// .usage {
//   @include overlay();
// }
@mixin overlay($offset: 0) {
  position: absolute;
  top: $offset;
  right: $offset;
  bottom: $offset;
  left: $offset;
}


// Mixin to give a sane default margin to blocks
// that are not the last-child in a container.
//
// .usage {
//   @include block();
// }
@mixin block() {

  &:not(:last-child) {
    margin-bottom: 1.5rem;
  }

}


// Mixin to create an arrow totaling less than
// 200 bytes unminified.
//
// .usage {
//   @include arrow($primary);
// }
@mixin arrow($color) {
  border: 1px solid $color;
  border-right: 0;
  border-top: 0;
  content: '';
  display: block;
  height: 0.5em;
  pointer-events: none;
  position: absolute;
  transform: rotate(-45deg);
  width: 0.5em;
}


// Mixin to create a delete button
// used in tags, modals, etc.
//
// .usage {
//   @include delete($primary);
// }
@mixin delete($color) {
  @include unselectable();
  -moz-appearance: none;
  -webkit-appearance: none;
  background-color: rgba($color, 0.2);
  border: none;
  border-radius: $radius-rounded;
  cursor: pointer;
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  font-size: 0;
  height: 20px;
  width: 20px;
  max-height: 20px;
  max-width: 20px;
  min-height: 20px;
  min-width: 20px;
  outline: none;
  position: relative;
  vertical-align: top;

  &:before,
  &:after {
    background-color: $white;
    content: '';
    display: block;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
  }

  &:before {
    height: 2px;
    width: 50%;
  }

  &:after {
    height: 50%;
    width: 2px;
  }

  &:hover,
  &:focus {
    background-color: rgba($color, 0.3);
  }

  &:active {
    background-color: rgba($color, 0.4);
  }


  /* Close / Delete Sizes
    ========================================================================== */

  &--small {
    height: 16px;
    max-height: 16px;
    max-width: 16px;
    min-height: 16px;
    min-width: 16px;
    width: 16px;
  }

  &--medium {
    height: 24px;
    max-height: 24px;
    max-width: 24px;
    min-height: 24px;
    min-width: 24px;
    width: 24px;
  }

  &--large {
    height: 32px;
    max-height: 32px;
    max-width: 32px;
    min-height: 32px;
    min-width: 32px;
    width: 32px;
  }

}

// A simple mixin to simplify adjusting the
// placeholder of various input fields.
//
// input[type='text'] {
//   @include placeholder() {
//     color: $black;
//   }
// }
@mixin placeholder() {
  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';

  @each $placeholder in $placeholders {

    &:#{$placeholder}-placeholder {
      @content;
    }

  }

}


// The notorious clearfix. We hope you
// will never have to use this, but just
// in case...
//
// .usage {
//   @include clearfix();
// }
@mixin clearfix() {

  &:after {
    content: '' !important;
    display: table !important;
    clear: both !important;
  }

}


// Mixin to allow touch scrolling
// of overflow content.
//
// .usage {
//   @include overflow-touch();
// }
@mixin overflow-touch() {
  -webkit-overflow-scrolling: touch;
}


// Mixin to easily center a selector
// based on width and optionally height.
//
// .usage {
//   @include center(1em);
// }
@mixin center($width, $height: 0) {
  position: absolute;

  @if $height != 0 {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$height} / 2));
  }

  @else {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$width} / 2));
  }

}


// Mixin to easily deem a selector
// unselectable.
//
// .usage {
//   @include unselectable();
// }
@mixin unselectable() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


// Mixin to easily hide text
// for screenreaders.
//
// .usage {
//   @include hide-text();
// }
@mixin hide-text() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
