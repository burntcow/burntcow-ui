///* ==========================================================================
//   #MIXINS
//   ========================================================================== */

// Mixin to easily apply an overlay to an
// element.
//
// .usage {
//   @include overlay();
// }
@mixin overlay($offset) {
  position: absolute;
  top: $offset;
  right: $offset;
  bottom: $offset;
  left: $offset;
}


// Mixin to give a sane default margin to blocks
// that are not the last-child in a container.
//
// .usage {
//   @include block();
// }
@mixin block() {

  &:not(:last-child) {
    margin-bottom: 1.5rem;
  }

}


// Mixin to create an arrow totaling less than
// 200 bytes unminified.
//
// .usage {
//   @include arrow();
// }
@mixin arrow($color) {
  border: 1px solid $color;
  border-right: 0;
  border-top: 0;
  content: '';
  display: block;
  height: 0.5em;
  pointer-events: none;
  position: absolute;
  transform: rotate(-45deg);
  width: 0.5em;
}


// A simple mixin to simplify adjusting the
// placeholder of various input fields.
//
// input[type='text'] {
//   @include placeholder() {
//     color: $black;
//   }
// }
@mixin placeholder() {
  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';

  @each $placeholder in $placeholders {

    &:#{$placeholder}-placeholder {
      @content;
    }

  }

}


// The notorious clearfix. We hope you
// will never have to use this, but just
// in case...
//
// .usage {
//   @include clearfix();
// }
@mixin clearfix() {

  &:after {
    content: '' !important;
    display: table !important;
    clear: both !important;
  }

}


// Mixin to allow touch scrolling
// of overflow content.
//
// .usage {
//   @include overflow-touch();
// }
@mixin overflow-touch() {
  -webkit-overflow-scrolling: touch;
}


// Mixin to easily center a selector
// based on width and optionally height.
//
// .usage {
//   @include center(1em);
// }
@mixin center($width, $height: 0) {
  position: absolute;

  @if $height != 0 {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$height} / 2));
  }

  @else {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$width} / 2));
  }

}


// Mixin to easily deem a selector
// unselectable.
//
// .usage {
//   @include unselectable();
// }
@mixin unselectable() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
